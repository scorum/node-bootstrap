# Set larger shared-file-size than default
shared-file-size = 25G

# p2p-endpoint =
p2p-endpoint = 0.0.0.0:2001

# Maxmimum number of incoming connections on P2P endpoint
# p2p-max-connections = 

# P2P nodes to connect to on startup (may specify multiple times)
seed-node = seed1.scorum.com:2001
seed-node = seed2.scorum.com:2001
seed-node = seed3.scorum.com:2001
seed-node = seed4.scorum.com:2001
seed-node = seed5.scorum.com:2001
seed-node = seed6.scorum.com:2001
seed-node = seed7.scorum.com:2001
seed-node = seed8.scorum.com:2001
seed-node = seed.scorum.dgazek.tk:2001
seed-node = seed.scorum.bcnodez.com:2005
seed-node = seed.scorum.bangzi.info:55503

# Pairs of [BLOCK_NUM,BLOCK_ID] that should be enforced as checkpoints.
# checkpoint = 

# Directory containing databases, configuration file, etc.
# data-dir = "witness_node_data_dir"

# Location of the shared memory file. Defaults to data_dir/blockchain
# shared-file-dir = 

# rpc_port_conf =
rpc-endpoint = 0.0.0.0:8001

# Endpoint for TLS websocket RPC to listen on
# rpc-tls-endpoint =

# Endpoint to forward write API calls to for a read node
# read-forward-rpc =

# The TLS certificate file for this server
# server-pem =

# Password for this certificate
# server-pem-password =

# API user specification, may be specified multiple times
# api-user = 

# Set an API to be publicly available, may be specified multiple times
public-api = database_api login_api network_broadcast_api account_by_key_api blockchain_history_api account_history_api account_statistics_api chain_api tags_api node_monitoring_api blockchain_statistics_api advertising_api devcommittee_history_api betting_api

# Plugin(s) to enable, may be specified multiple times
enable-plugin = witness blockchain_history account_by_key account_statistics tags blockchain_monitoring

# Maximum age of head block when broadcasting tx via API
max-block-age = 200

# Flush shared memory file to disk this many blocks
flush = 100000

# Rebuild object graph by replaying all blocks
# replay-blockchain = 

# Delete all blocks and re-sync with network from scratch
# resync-blockchain = 

# Force validation of all transactions
# force-validate = 

# Check correctness of chainbase locking
# check-locks = 

# Disable get_block API call
# disable-get-block = 
# Defines a range of accounts to track as a json pair ["from","to"] [from,to] Can be specified multiple times
# track-account-range = 

# Defines a list of operations which will be explicitly logged.
# history-whitelist-ops = transfer_operation transfer_to_vesting_operation withdraw_vesting_operation escrow_transfer_operation escrow_approve_operation escrow_dispute_operation escrow_release_operation author_reward_operation curation_reward_operation fill_vesting_withdraw_operation delegate_vesting_shares_operation return_vesting_delegation_operation comment_benefactor_reward_operation

# Defines a list of operations which will be explicitly ignored.
history-blacklist-ops = active_sp_holders_reward_operation active_sp_holders_reward_legacy_operation

# Track account statistics by grouping orders into buckets of equal size measured in seconds specified as a JSON array of numbers
account-stats-bucket-size = [60,3600,21600,86400,604800,2592000]

# How far back in time to track history for each bucker size, measured in the number of buckets (default: 100)
account-stats-history-per-bucket = 100

# Which accounts to track the statistics of. Empty list tracks all accounts.
account-stats-tracked-accounts = []

# Track blockchain statistics by grouping orders into buckets of equal size measured in seconds specified as a JSON array of numbers
chain-stats-bucket-size = [1800,3600,86400]

# How far back in time to track history for each bucket size, measured in the number of buckets (default: 100)
chain-stats-history-per-bucket = 30

# RPC endpoint of a trusted validating node (required)
# trusted-node = 

# Enable block production, even if the chain is stale.
enable-stale-production = false

# Percent of witnesses (0-99) that must be participating in order to produce blocks
required-participation = false

log-appender = {"appender":"stderr","stream":"std_error"}
log-appender = {"appender":"node",  "stream":"logs/node.log",  "rotation_interval_minutes":"60", "rotation_limit_hours":"96"}
log-appender = {"appender":"rpc",   "stream":"logs/rpc.log",   "rotation_interval_minutes":"60", "rotation_limit_hours":"96"}
log-appender = {"appender":"remote","stream":"5.9.124.5:12000", "host_name":"prepare-block-state-rpc", "additional_info":"node"}

log-logger = {"name":"default","level":"info","appender":"stderr, node, remote"}
log-logger = {"name":"p2p","level":"info","appender":"node, remote"}
log-logger = {"name":"rpc","level":"info","appender":"rpc, remote"}
